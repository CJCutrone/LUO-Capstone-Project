{"version":3,"sources":["../../dev/application.js"],"names":["app","Vue","el","data","isLoading","type","currentMonth","editedProject","editedVolunteer","months","volunteers","methods","getFullAddress","volunteer","address","city","locality","country","postal","newVolunteer","firstName","lastName","email","deleteVolunteer","removeVolunteer","userID","filter","it","editVolunteer","JSON","parse","stringify","saveVolunteer","_newList","push","sendVolunteer","sort","sortProjects","project","newProject","manager","cost","endsOnCurrentMonth","deleteProject","removeProject","projectID","forEach","projects","editProject","saveProject","index","sendProject","map","computed","getRoofOfChart","a","b","getChartY","fill","toFixed","callback","post","then","toCurrency","string","parseFloat","toLocaleString","style","currency","changeType","set","loadData","setMonth","month","get","response","_projects","url","Promise","resolve","reject","_req","XMLHttpRequest","onload","_response","error","open","setRequestHeader","send","window","addEventListener"],"mappings":"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","sourcesContent":["const app = new Vue({\r\n    el: \"#app\",\r\n    data: {\r\n        isLoading: true,\r\n        type: \"months\",\r\n        currentMonth: 0,\r\n        editedProject: {},\r\n        editedVolunteer: {},\r\n        months: [{}],\r\n        volunteers: [{}]\r\n    },\r\n    methods: {\r\n        getFullAddress(volunteer){\r\n            return `${volunteer.address}, ${volunteer.city}, ${volunteer.locality}, ${volunteer.country}, ${volunteer.postal}`;\r\n        },\r\n        newVolunteer(){\r\n            this.editedVolunteer = {\r\n                firstName: \"\",\r\n                lastName: \"\",\r\n                email: \"\",\r\n                address: \"\",\r\n                city: \"\",\r\n                locality: \"\",\r\n                country: \"\",\r\n                postal: \"\"\r\n            }\r\n        },\r\n        deleteVolunteer(){\r\n            removeVolunteer(this.editedVolunteer.userID, () => {\r\n                this.volunteers = this.volunteers.filter(it => it.userID != this.editedVolunteer.userID)\r\n                this.editedVolunteer = {};\r\n            })\r\n        },\r\n        editVolunteer(userID){\r\n            this.editedVolunteer = JSON.parse(\r\n                JSON.stringify(\r\n                    this.volunteers.filter(it => it.userID == userID)[0] || {}\r\n                )\r\n            );\r\n        },\r\n        saveVolunteer(){\r\n            if(this.editedVolunteer.userID){\r\n                const _newList = this.volunteers.filter(it => it.userID != this.editedVolunteer.userID);\r\n                _newList.push(JSON.parse(JSON.stringify(this.editedVolunteer)));\r\n                sendVolunteer(this.editedVolunteer, () => {\r\n                    this.editedVolunteer = {};\r\n                    this.volunteers = _newList.sort(sortProjects);\r\n                });\r\n            } else {\r\n                sendVolunteer(this.editedVolunteer, (project) => {\r\n                    const _newList = this.volunteers;\r\n                    this.editedVolunteer.userID = project.userID;\r\n\r\n                    _newList.push(this.editedVolunteer);\r\n                    \r\n                    this.editedVolunteer = {};\r\n                    this.volunteers = _newList.sort(sortProjects);\r\n                });\r\n            }\r\n        },\r\n        newProject(){\r\n            this.editedProject = {\r\n                country: \"\",\r\n                manager: \"\",\r\n                type: \"\",\r\n                cost: 0,\r\n                endsOnCurrentMonth: false\r\n            }\r\n        },\r\n        deleteProject(){\r\n            removeProject(this.editedProject.projectID, () => {\r\n                this.months.forEach(it => {\r\n                    it.projects = it.projects.filter(it => it.projectID != this.editedProject.projectID);\r\n                });\r\n                this.editedProject = {};\r\n            })\r\n        },\r\n        editProject(projectID){\r\n            this.editedProject = JSON.parse(\r\n                JSON.stringify(\r\n                    this.months[this.currentMonth]\r\n                        .projects\r\n                        .filter(it => it.projectID == projectID)[0] || {}\r\n                )\r\n            );\r\n        },\r\n        saveProject() {\r\n            this.editedProject.currentMonth = this.currentMonth;\r\n            if(this.editedProject.projectID){\r\n                this.months.forEach((it, index) => {\r\n                    it.projects = it.projects.filter(it => it.projectID != this.editedProject.projectID)\r\n                    if (!(this.editedProject.endsOnCurrentMonth && index > this.currentMonth))\r\n                        it.projects.push(JSON.parse(JSON.stringify(this.editedProject)))\r\n                    it.projects = it.projects.sort(sortProjects);\r\n                });\r\n                sendProject(this.editedProject, () => {\r\n                    this.editedProject = {};\r\n                });\r\n            } else {\r\n                sendProject(this.editedProject, (project) => {\r\n                    this.editedProject.projectID = project.projectID;\r\n\r\n                    this.months = this.months.map((it, index) => {\r\n                        if(index >= this.currentMonth){\r\n                            it.projects.push(JSON.parse(JSON.stringify(this.editedProject)))\r\n                            it.projects = it.projects.sort(sortProjects);\r\n                        }\r\n                        return it;\r\n                    });\r\n                    this.editedProject = {};\r\n                });\r\n            }\r\n        }\r\n    },\r\n    computed: {\r\n        getRoofOfChart(){\r\n            return (this.months[this.currentMonth]\r\n                        .projects || [])\r\n                        .map((it) => it.cost)\r\n                        .sort((a, b) => b - a)[0];\r\n        },\r\n        getChartY(){\r\n            return [0, 0, 0, 0, 0]\r\n                .fill(\r\n                    this.getRoofOfChart, \r\n                    0, 4\r\n                )\r\n                .map((it, index) => ((it / (index + 1)) / 1000).toFixed(2) + \"k\");\r\n        }\r\n    }\r\n});\r\n\r\nconst removeVolunteer = (userID, callback) => \r\n    post(`/api/data/remove/volunteer`, { userID: userID }).then(callback);\r\n\r\nconst removeProject = (projectID, callback) => \r\n    post(`/api/data/remove/project`, { projectID: projectID }).then(callback);\r\n\r\nconst sendProject = (project, callback) => \r\n    post(`/api/data/edit/project`, { project: project }).then(callback);\r\n\r\nconst sendVolunteer = (volunteer, callback) => \r\n    post(`/api/data/edit/volunteer`, { volunteer: volunteer }).then(callback);\r\n\r\nconst sortProjects = (a, b) => {\r\n    if(a.country == b.country) return a.type > b.type ? 1 : -1;\r\n    else return a.country > b.country ? 1 : -1;\r\n};\r\n\r\nconst toCurrency = (string) => \r\n    parseFloat(string)\r\n        .toLocaleString(undefined, { \r\n            style: \"currency\", \r\n            currency: \"USD\" \r\n        });\r\n\r\nconst changeType = (type) => {\r\n    Vue.set(app, \"editedProject\", {});\r\n    Vue.set(app, \"type\", type);\r\n    loadData(type);\r\n}\r\n\r\nconst setMonth = (month) => {\r\n    Vue.set(app, \"editedProject\", {});\r\n    Vue.set(app, \"currentMonth\", month);\r\n}\r\n\r\nconst loadData = (type) => {\r\n    Vue.set(app, \"isLoading\", true);\r\n    get(`/api/data/${type}`).then((response)=> {\r\n        if(type == 'months')\r\n            response = response.map(it => {\r\n                const _projects = (it.projects || []).sort(sortProjects);\r\n                it.projects = _projects;\r\n                return it;\r\n            });\r\n\r\n        Vue.set(app, type, response)\r\n        Vue.set(app, \"isLoading\", false);\r\n    });\r\n}\r\n\r\nconst post = (url, data) => new Promise((resolve, reject) => {\r\n    const _req = new XMLHttpRequest();\r\n    _req.onload = () => {\r\n        const _response = JSON.parse(_req.response);\r\n        if(_response.error) reject(_response);\r\n        else resolve(_response);\r\n    };\r\n    _req.open(\"POST\", url);\r\n    _req.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n    _req.send(JSON.stringify(data));\r\n});\r\n\r\nconst get = (url) => new Promise((resolve, reject) => {\r\n    const _req = new XMLHttpRequest();\r\n    _req.onload = () => {\r\n        const _response = JSON.parse(_req.response);\r\n        if(_response.error) reject(_response);\r\n        else resolve(_response);\r\n    };\r\n    _req.open(\"GET\", url);\r\n    _req.setRequestHeader(\"Content-Type\", \"application/json;charset=UTF-8\");\r\n    _req.send();\r\n});\r\n\r\nwindow.addEventListener(\"load\", ()=>{\r\n    loadData(\"months\");\r\n})"],"file":"application.js"}
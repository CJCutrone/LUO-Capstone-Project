//- * @author Camille Cutrone
doctype html PUBLIC "-//W3C//DTD XHTML 1.1//EN" "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd"
html(xmlns="http://www.w3.org/1999/xhtml", lang="en-US")
    head
        title= title
        meta(content='text/html; charset=utf-8', http-equiv='Content-Type')
        meta(content='width=device-width,initial-scale=1.0', name='viewport')
        meta(content='Learning NodeJS', name='description')
        meta(content='#1e88e5', name='theme-color')
        link(rel='stylesheet', href='https://fonts.googleapis.com/css?family=Roboto:100,400|Material+Icons')
        link(rel='stylesheet', href='/css/home.css')
    body
        div(id="app")&attributes({"v-cloak": "", ":class": "isLoading ? 'loading' : 'done-loading'"})
            div(class="background hide-on-load")
            div(class="center-content hide-on-load")
                div(class="loader")
            ul(class="navbar")
                li(class="navbar-icon")
                    img(class="logo", src="/imgs/logos/a_min.png")
                li(class="navbar-icon")
                    i(class="navbar-mi material-icons")&attributes({
                            "v-on:click": "changeType('months')",
                            ":class": "type == 'months'? 'selected': ''"
                        }) attach_money
                li(class="navbar-icon")
                    i(class="navbar-mi material-icons")&attributes({
                            "v-on:click": "changeType('volunteers')",
                            ":class": "type == 'volunteers'? 'selected': ''"
                        }) person
                li(class="navbar-icon bottom")
                    i(class="navbar-mi material-icons")&attributes({"v-on:click": "window.location.href='/logout'"}) exit_to_app
            div(class="content")&attributes({"v-show": "type == 'months'"})
                ul(class="month-wrapper")
                    li(class="month")&attributes({
                        "v-for": "(month, index) in months", 
                        "v-on:click": "setMonth(index)",
                        ":class": "index == currentMonth ? 'selected-month': ''"}) {{ month.name }}
                div(class="sub-content")
                    div(class="card chart")&attributes({
                        "v-show": "(months[currentMonth].projects || []).length > 0 && getRoofOfChart > 0"
                    })
                        ul(class="line-chart-base")
                            li(class="line-chart-y")&attributes({
                                "v-for": "y in getChartY"
                            }) {{ y }}
                        div(class="bar-wrapper")
                            div(class="bar")&attributes({
                                "v-for": "p in months[currentMonth].projects",
                                ":style": "{height: (100 / (getRoofOfChart / p.cost)) + '%' }"
                            })
                                div(class="bar-text")
                                    span {{ p.country }}
                                    span {{ p.type }}
                    div(class="projects")
                        div(class="card edited-project")&attributes({
                            ":class": "editedProject.country != undefined ? 'show': ''"
                        })
                            input(class='project-country', placeholder="Country", type='text')&attributes({
                                "v-model": "editedProject.country"
                            }) 
                            input(class='project-manager', placeholder="Manager", type='text')&attributes({
                                "v-model": "editedProject.manager"
                            }) 
                            input(class='project-type', placeholder="Type", type='text')&attributes({
                                "v-model": "editedProject.type"
                            }) 
                            input(class='project-cost', placeholder="Cost", type='number')&attributes({
                                "v-model": "editedProject.cost"
                            })
                            input(class='project-id', type='hidden')&attributes({
                                "v-model": "editedProject.projectID"
                            })
                            div(class="endProject-wrapper")
                                input(id="endProject", type="checkbox")&attributes({
                                    "v-model": "editedProject.endsOnCurrentMonth"
                                }) 
                                label(for="endProject") Project ends this month
                            button(class='button delete')&attributes({
                                "v-show": "editedProject.projectID != ''",
                                "v-on:click": "deleteProject()"
                            }) Delete
                            div(class='manage-buttons')
                                button(class='button cancel')&attributes({
                                    "v-on:click": "editProject()"
                                }) Cancel
                                button(class='button confirm')&attributes({
                                    "v-on:click": "saveProject()"
                                }) Save
                        ul(class="card projects-list")
                            li(class="project")&attributes({
                                "v-for": "p in months[currentMonth].projects",
                                "v-on:click": "editProject(p.projectID)"
                            })
                                p(class="project-country") {{ p.country }}
                                    span(class="project-manager") {{ p.manager }}
                                p(class="project-type") {{ p.type }}
                                    span(class="project-cost") {{ toCurrency(p.cost) }}
                            li(class="buttons")
                                button(class="button newProject")&attributes({
                                    "v-on:click": "newProject()"
                                }) New Project
            div(class="content")&attributes({"v-show": "type == 'volunteers'"})
                div(class="volunteer-wrapper")
                    div(class="card edit-volunteer")&attributes({
                        ":class": "editedVolunteer.firstName != undefined ? 'show': ''"
                    })
                        input(class='volunteer-name', placeholder="First Name", type='text')&attributes({
                            "v-model": "editedVolunteer.firstName"
                        })
                        input(class='volunteer-name', placeholder="Last Name", type='text')&attributes({
                            "v-model": "editedVolunteer.lastName"
                        })
                        input(class='volunteer-name', placeholder="Email", type='text')&attributes({
                            "v-model": "editedVolunteer.email"
                        })
                        input(class='volunteer-address', placeholder="Address", type='text')&attributes({
                            "v-model": "editedVolunteer.address"
                        })
                        input(class='volunteer-city', placeholder="Cty", type='text')&attributes({
                            "v-model": "editedVolunteer.city"
                        })
                        input(class='volunteer-locality', placeholder="Locality", type='text')&attributes({
                            "v-model": "editedVolunteer.locality"
                        })
                        input(class='volunteer-country', placeholder="Country", type='text')&attributes({
                            "v-model": "editedVolunteer.country"
                        })
                        input(class='volunteer-postal', placeholder="Postal", type='text')&attributes({
                            "v-model": "editedVolunteer.postal"
                        })
                        input(class='volunteer-id', type='hidden')&attributes({
                            "v-model": "editedVolunteer.userID"
                        })
                        button(class='button delete')&attributes({
                            "v-show": "editedProject.projectID != ''",
                            "v-on:click": "deleteVolunteer()"
                        }) Delete
                        div(class='manage-buttons')
                            button(class='button cancel')&attributes({
                                "v-on:click": "editVolunteer()"
                            }) Cancel
                            button(class='button confirm')&attributes({
                                "v-on:click": "saveVolunteer()"
                            }) Save
                    ul(class="card volunteers")
                        li(class="volunteer")&attributes({
                            "v-for": "volunteer in volunteers",
                            "v-on:click": "editVolunteer(volunteer.userID)"
                        })
                            p(class="volunteer-name") {{ volunteer.lastName + ", " + volunteer.firstName }}
                                span(class="volunteer-email") {{ volunteer.email }}
                            p(class="volunteer-location") {{ getFullAddress(volunteer) }}
                        li(class="buttons")
                            button(class="button newVolunteer")&attributes({
                                "v-on:click": "newVolunteer()"
                            }) New Volunteer
        script(src="https://cdnjs.cloudflare.com/ajax/libs/vue/2.5.17/vue.min.js")
        script(type="text/javascript", src="/src/application.js")